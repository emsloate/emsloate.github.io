pvp %>% ggplot(aes(x=player_rank, y=mean(vorp_pct), group = player_rank)) +
geom_histogram()
pvp %>% ggplot(aes(x=player_rank, y=vorp_pct, group = player_rank)) +
geom_histogram()
pvp %>% ggplot(aes(x=player_rank, y=vorp_pct, group = player_rank)) +
geom_boxplot()
pvp
player_vorp_ranks %>% inner_join(total_vorp_wins, by = c("Year","Team")) %>% mutate(vorp_pct  = VORP/total_team_vorp) %>% filter(vorp_pct > 1)
player_vorp_ranks <- season_stats %>% group_by(Year,Team) %>% mutate(player_rank = order(order(VORP, decreasing = TRUE)))
player_vorp_ranks %>% ggplot(aes(x=player_rank, y=VORP, group = player_rank)) +
geom_boxplot()
bpp <- best_player %>% inner_join(total_vorp_wins, by = c("Year","Team")) %>% mutate(vorp_pct  = VORP/total_team_vorp) %>% select(Year,Player,Team,win_pct = win_pct.x, vorp_pct) %>% filter(vorp_pct > 0)
bpp %>% ggplot(aes(x=vorp_pct, y=win_pct)) +
geom_point() +
geom_smooth(method = lm)
bpp %>% ggplot(aes(x=vorp_pct, y=win_pct)) +
geom_point() +
geom_smooth(method = glm)
best_player_standardized %>% ggplot(aes(x=std_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm)
best_player %>% ggplot(aes(x=VORP, y=win_pct)) +
geom_point() +
geom_smooth(method = lm)
player_vorp_ranks %>% group_by(Team,Year) %>% filter(rank <= 5) %>% summarize(top_5_vorp = sum(VORP))
player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank <= 5) %>% summarize(top_5_vorp = sum(VORP))
player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank > 5) %>% summarize(top_5_vorp = sum(VORP))
player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank > 5) %>% summarize(bench_vorp = sum(VORP))
top5 <- player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank <= 5) %>% summarize(top_5_vorp = sum(VORP))
bench <- player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank > 5) %>% summarize(bench_vorp = sum(VORP))
top5 %>% inner_join(bench, by = c("Team","Year")) %>% inner_join(team_results, by = c("Team","Year"))
top5_bench_model <- lm(win_pct ~ top_5_vorp+bench_vorp, data = topvb)
topvb <- top5 %>% inner_join(bench, by = c("Team","Year")) %>% inner_join(team_results, by = c("Team","Year"))
top5_bench_model <- lm(win_pct ~ top_5_vorp+bench_vorp, data = topvb)
top5_bench_model
topvb
top5_bench_model
summary(top5_bench_model)
top5
top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(VORP), sd_vorp = sd(VORP)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = top_5_vopr-mean_vorp)/sd_vorp) %>% select(Year,Team,std_vorp)
top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(VORP), sd_vorp = sd(VORP)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vopr-mean_vorp)/sd_vorp) %>% select(Year,Team,std_vorp)
top5sd <- top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vopr-mean_vorp)/sd_vorp) %>% select(Year,Team,std_vorp)
group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,std_vorp)
group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vorp-mean_vorp)/sd_vorp)
group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vorp-mean_vorp)/sd_vorp)
top5
top5 %>% group_by(Year)
top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year")
top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vorp-mean_vorp)/sd_vorp)
top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std_vorp = (top_5_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,std_vorp)
top5sd <- top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std5_vorp = (top_5_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,std5_vorp)
bench %>% group_by(Year) %>% summarize(mean_vorp = mean(bench_vorp), sd_vorp = sd(bench_vorp)) %>% left_join(bench, by = "Year") %>% mutate(stdb_vorp = (bench_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,stdb_vorp)
benchsd <- bench %>% group_by(Year) %>% summarize(mean_vorp = mean(bench_vorp), sd_vorp = sd(bench_vorp)) %>% left_join(bench, by = "Year") %>% mutate(stdb_vorp = (bench_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,stdb_vorp)
top5sd %>% inner_join(benchsd, by = c("Team","Year")) %>% inner_join(team_results, by = c("Team","Year"))
top5_bench_model <- lm(win_pct ~ std5_vorp+stdb_vorp, data = topvb)
topvb
topvb <- top5sd %>% inner_join(benchsd, by = c("Team","Year")) %>% inner_join(team_results, by = c("Team","Year"))
topvb
top5_bench_model <- lm(win_pct ~ std5_vorp+stdb_vorp, data = topvb)
summary(top5_bench_model)
top5_bench_model
top5_bench_model %>%  broom::augment()
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=.resid)) +
geom_point()
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point()
summary(top5_bench_model)
summary(top5_bench_model)
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point()
top5_model <- lm(win_pct ~ std5_vorp, data = topvb)
summary(top5_model)
bench_model <- lm(win_pct ~ stdb_vorp, data = topvb)
summary(bench_model)
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point()
summary(top5_bench_model)
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point()
topvb
summary(top5_bench_model)
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point()
top5_bench_mode
top5_bench_model
top5_bench_model$coef
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point() +
labs(title = paste("Adj R2 = ",signif(summary(top5_bench_model)$adj.r.squared, 5),
"Intercept =",signif(top5_bench_model$coef[[1]],5 ),
"Top 5 Coefficient =",signif(top5_bench_model$coef[[2]], 5),
"Bench Coefficient =",signif(top5_bench_model$coef[[3]], 5)))
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point() +
labs(title = paste("Adj R2 = ",signif(summary(top5_bench_model)$adj.r.squared, 3),
"Intercept =",signif(top5_bench_model$coef[[1]],3 ),
"Top 5 Coefficient =",signif(top5_bench_model$coef[[2]], 3),
"Bench Coefficient =",signif(top5_bench_model$coef[[3]], 3)))
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point() +
labs(title = paste("Adj R2 = ",signif(summary(top5_bench_model)$adj.r.squared, 2),
"Intercept =",signif(top5_bench_model$coef[[1]],2 ),
"Top 5 Coefficient =",signif(top5_bench_model$coef[[2]], 2),
"Bench Coefficient =",signif(top5_bench_model$coef[[3]], 2)))
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(top5_bench_model)$adj.r.squared, 2),
"Intercept =",signif(top5_bench_model$coef[[1]],2 ),
"Top 5 Coefficient =",signif(top5_bench_model$coef[[2]], 2),
"Bench Coefficient =",signif(top5_bench_model$coef[[3]], 2)))
total_vorp_wins %>% ggplot(aes(x=total_team_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(total_vorp_model)$adj.r.squared, 2),
"Intercept =",signif(total_vorp_model$coef[[1]],2 ),
"Coefficient =",signif(total_vorp_model$coef[[2]], 2)))
total_vorp_model <- lm(win_pct ~ total_team_vorp, data = total_vorp_wins)
total_vorp_wins %>% ggplot(aes(x=total_team_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(total_vorp_model)$adj.r.squared, 2),
"Intercept =",signif(total_vorp_model$coef[[1]],2 ),
"Coefficient =",signif(total_vorp_model$coef[[2]], 2)))
best_player_standardized <- best_player %>% group_by(Year) %>% summarize(mean_vorp = mean(VORP), sd_vorp = sd(VORP)) %>% left_join(best_player,by = "Year") %>% mutate(std_vorp = (VORP-mean_vorp)/sd_vorp) %>% select(Year,Player,std_vorp,win_pct)
best_player_stdmodel <- lm(win_pct ~ std_vorp, data = best_player_standardized)
summary(best_player_stdmodel)
best_player_standardized %>% ggplot(aes(x=std_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm)
best_player_standardized %>% ggplot(aes(x=std_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(best_player_stdmodel)$adj.r.squared, 2),
"Intercept =",signif(best_player_stdmodel$coef[[1]],2 ),
"Best Player Coefficient =",signif(best_player_stdmodel$coef[[2]], 2)))
best_player_stdmodel
best_player_standardized %>% ggplot(aes(x=std_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(best_player_stdmodel)$adj.r.squared, 2),
"Intercept =",signif(best_player_stdmodel$coef[[1]],2 ),
"Best Player Coefficient =",signif(best_player_stdmodel$coef[[2]], 2)))
best_player_standardized %>% ggplot(aes(x=std_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(best_player_stdmodel)$adj.r.squared, 3),
"Intercept =",signif(best_player_stdmodel$coef[[1]],3 ),
"Best Player Coefficient =",signif(best_player_stdmodel$coef[[2]], 3)))
total_vorp_wins %>% ggplot(aes(x=total_team_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(total_vorp_model)$adj.r.squared, 3),
"Intercept =",signif(total_vorp_model$coef[[1]],3 ),
"Coefficient =",signif(total_vorp_model$coef[[2]], 3)))
install.packages("caret")
install.packages("mlbench")
set.seed(7)
# load the library
library(mlbench)
library(caret)
install.packages("ddalpha")
set.seed(7)
# load the library
library(mlbench)
library(caret)
# ensure the results are repeatable
set.seed(7)
# load the library
library(mlbench)
library(caret)
install.packages("ddalpha")
# ensure the results are repeatable
set.seed(7)
# load the library
library(mlbench)
library(caret)
library(caret)
library(caret)
install.packages("ddalpha")
library(caret)
install.packages("kernlab")
library(caret)
set.seed(7)
# load the library
library(mlbench)
library(caret)
# load the data
data(PimaIndiansDiabetes)
# calculate correlation matrix
correlationMatrix <- cor(PimaIndiansDiabetes[,1:8])
# summarize the correlation matrix
print(correlationMatrix)
# find attributes that are highly corrected (ideally >0.75)
highlyCorrelated <- findCorrelation(correlationMatrix, cutoff=0.5)
# print indexes of highly correlated attributes
print(highlyCorrelated)
data(PimaIndiansDiabetes)
PimaIndiansDiabetes
cor(PimaIndiansDiabetes[,1:8])
PimaIndiansDiabetes[,1:8]
highlyCorrelated <- findCorrelation(correlationMatrix, cutoff=0.5)
print(highlyCorrelated)
control <- trainControl(method="repeatedcv", number=10, repeats=3)
model <- train(diabetes~., data=PimaIndiansDiabetes, method="lvq", preProcess="scale", trControl=control)
player_vorp_ranks
player_vorp_ranks %>% spread(player_rank,VORP)
player_vorp_ranks %>% spread(c("Year","Team","player_rank"),VORP)
player_vorp_ranks %>% spread(player_rank,VORP)
player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP)
player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0)
player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP)
player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP) %>% select(c(1:17))
player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
spread_ranks[,3:15]
cor(spread_ranks[,3:15])
spread_ranks %>% inner_join(team_results, by = c("Year","Team"))
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team"))
spread_ranks_w[,3:18]
cor(spread_ranks_w[,3:18])
vorp_rf <- randomForest(win_pct~1+2+3+4+5+6+7+8+9+10+11+12+13+14+15, importance=TRUE, data=spread_ranks_w)
library(randomForest)
vorp_rf <- randomForest(win_pct~1+2+3+4+5+6+7+8+9+10+11+12+13+14+15, importance=TRUE, data=spread_ranks_w)
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team"))
spread_ranks_w
vorp_rf <- randomForest(win_pct~3, importance=TRUE, data=spread_ranks_w)
names(spread_ranks_w)
vorp_rf <- randomForest(win_pct~Team, importance=TRUE, data=spread_ranks_w)
names(spread_ranks_w)
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename(r1 = 1)
spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename(r1 = 1)
spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename(r1 = "1")
vorp_rf <- randomForest(win_pct~r1, importance=TRUE, data=spread_ranks_w)
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename(r1 = "1")
vorp_rf <- randomForest(win_pct~r1, importance=TRUE, data=spread_ranks_w)
spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename(c("1" = "r1","2" = "r2","3" = "r3","4" = "r4","5" = "r5","6" = "r6","7" = "r7","8" = "r8","9" = "r9","10" = "r10"))
spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("1" = "r1","2" = "r2","3" = "r3","4" = "r4","5" = "r5","6" = "r6","7" = "r7","8" = "r8","9" = "r9","10" = "r10")
spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","2" = "r2","3" = "r3","4" = "r4","5" = "r5","6" = "r6","7" = "r7","8" = "r8","9" = "r9","10" = "r10")
spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10")
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10")
vorp_rf <- randomForest(win_pct~r1+r2+r3+r4+r5+r6+r7+r8+r9+r10, importance=TRUE, data=spread_ranks_w)
variable_importance <- importance(vorp_rf)
knitr::kable(head(round(variable_importance, digits=2)))
variable_importance
vorp_rf
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
spread_ranks
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10", "r11" = "11","r12" = "12", "r13" = "13", "r14" = "14", "r15" = "15")
spread_ranks_w
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3)
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15) %>% mutate(top3_mean = mean(top3_vorp))
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15) %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp))
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15) %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp))
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15) %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year")
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15) %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_3 = (top3_vorp-mean3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest)
spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15) %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year")
spread_ranks_w <- spread_ranks_w %>% mutate(top3_vorp = r1 + r2 + r3) %>% mutate(rest_vorp = r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks_w <- group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_3 = (top3_vorp-mean3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest)
spread_ranks_w
spread_ranks_w %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_3 = (top3_vorp-mean3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest)
spread_ranks_w %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_3 = (top3_vorp-mean_3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest)
spread_ranks_w %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_3 = (top3_vorp-mean_3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_3,std_rest,win_pct)
spread_ranks_w %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_1 = (r1-mean_1)/sd1,std_3 = (top3_vorp-mean_3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_1,std_3,std_rest,win_pct)
cor(spread_ranks_w[,3:6])
spread_ranks_w <- spread_ranks_w %>% group_by(Year) %>% summarize(mean_1 = mean(r1), sd1 = sd(r1), mean_3 = mean(top3_vorp), sd3 = sd(top3_vorp), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_1 = (r1-mean_1)/sd1,std_3 = (top3_vorp-mean_3)/sd3, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_1,std_3,std_rest,win_pct)
cor(spread_ranks_w[,3:6])
vorp_rf <- randomForest(win_pct~std_1,std_3,std_rest, importance=TRUE, data=spread_ranks_w)
spread_ranks_w)
spread_ranks_w
vorp_rf <- randomForest(win_pct~std_1+std_3+std_rest, importance=TRUE, data=spread_ranks_w)
variable_importance <- importance(vorp_rf)
knitr::kable(head(round(variable_importance, digits=2)))
spread_ranks_w <- spread_ranks_w %>% mutate(vorp12 = r1 + r2, vorp35 = r3+r4+r5,rest_vorp = r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
#renaming columns, computing standardized vorp for each category 1,3,3-15
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10", "r11" = "11","r12" = "12", "r13" = "13", "r14" = "14", "r15" = "15")
spread_ranks_w <- spread_ranks_w %>% mutate(vorp12 = r1 + r2, vorp35 = r3+r4+r5,rest_vorp = r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks_w %>% group_by(Year) %>% summarize(mean_12 = mean(vorp12), sd12 = sd(vorp12), mean_35 = mean(vorp35), sd35 = sd(vorp35), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_12 = (vorp12-mean_12)/sd12,std_35 = (vorp35-mean_35)/sd35, std_rest = (rest_vorp-mean_rest)/sd_rest)
spread_ranks_w <- spread_ranks_w %>% group_by(Year) %>% summarize(mean_12 = mean(vorp12), sd12 = sd(vorp12), mean_35 = mean(vorp35), sd35 = sd(vorp35), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_12 = (vorp12-mean_12)/sd12,std_35 = (vorp35-mean_35)/sd35, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_1,std_3,std_rest,win_pct)
spread_ranks_w <- spread_ranks_w %>% group_by(Year) %>% summarize(mean_12 = mean(vorp12), sd12 = sd(vorp12), mean_35 = mean(vorp35), sd35 = sd(vorp35), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_12 = (vorp12-mean_12)/sd12,std_35 = (vorp35-mean_35)/sd35, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_12,std_35,std_rest,win_pct)
cor(spread_ranks_w[,3:6])
vorp_rf <- randomForest(win_pct~std_1+std_3+std_rest, importance=TRUE, data=spread_ranks_w)
vorp_rf <- randomForest(win_pct~std_12+std_35+std_rest, importance=TRUE, data=spread_ranks_w)
variable_importance <- importance(vorp_rf)
knitr::kable(head(round(variable_importance, digits=2)))
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
#renaming columns, computing standardized vorp for each category 1,3,3-15
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10", "r11" = "11","r12" = "12", "r13" = "13", "r14" = "14", "r15" = "15")
spread_ranks_w2 <- spread_ranks_w %>% mutate(vorp12 = r1 + r2, vorp35 = r3+r4+r5,rest_vorp = r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks_w2 <- spread_ranks_w2 %>% group_by(Year) %>% summarize(mean_12 = mean(vorp12), sd12 = sd(vorp12), mean_35 = mean(vorp35), sd35 = sd(vorp35), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w, by = "Year") %>% mutate(std_12 = (vorp12-mean_12)/sd12,std_35 = (vorp35-mean_35)/sd35, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_12,std_35,std_rest,win_pct)
spread_ranks_w2 <- spread_ranks_w %>% mutate(vorp12 = r1 + r2, vorp35 = r3+r4+r5,rest_vorp = r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks_w2 <- spread_ranks_w2 %>% group_by(Year) %>% summarize(mean_12 = mean(vorp12), sd12 = sd(vorp12), mean_35 = mean(vorp35), sd35 = sd(vorp35), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w2, by = "Year") %>% mutate(std_12 = (vorp12-mean_12)/sd12,std_35 = (vorp35-mean_35)/sd35, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_12,std_35,std_rest,win_pct)
vorp_rf1 <- randomForest(win_pct~r1+r2+r3+r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15, importance=TRUE, data=spread_ranks_w)
vorp_rf1 <- randomForest(win_pct~r1+r2+r3+r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15, importance=TRUE, data=spread_ranks_w)
vorp_rf2 <- randomForest(win_pct~std_12+std_35+std_rest, importance=TRUE, data=spread_ranks_w2)
#determining variable importance
variable_importance1 <- importance(vorp_rf1)
variable_importance2 <- importance(vorp_rf2)
knitr::kable(head(round(variable_importance1, digits=2)))
knitr::kable(head(round(variable_importance2, digits=2)))
cor(spread_ranks_w[,3:18])
cor(spread_ranks_w2[,3:6])
lm(win_pct ~ std_12+std_35+std_rest, data = spread_ranks_w2)
spread_ranks_w2
library(tidyverse)
library(dplyr)
library(readxl)
#reading in player stats, filtering our old seasons, we only need player, team, year and VORP
season_stats = read_csv("~/Documents/Sophmore Year Classes/CMSC320/Final Project/Seasons_Stats.csv")
season_stats <- season_stats %>% filter(Year >= 1974 & Year < 2017) %>% select(Year,Player,Tm,VORP) %>% transform(VORP = as.numeric(VORP)) %>% rename(Team = Tm)
#reading in team results, converting years & teams to same as player dataset
team_results = read_xlsx("~/Documents/Sophmore Year Classes/CMSC320/Final Project/Historical NBA Performance.xlsx")
#clean up year data, add 1 to each year to match up
team_results <- team_results %>% rename(win_pct = Winning_Percentage) %>% select(Year, Team, win_pct)
team_results <- team_results %>% mutate(Year = if_else(str_detect(Year,"\\d{1,2}/\\d/\\d{4}"), str_match(Year,"\\d{1,2}/\\d/(\\d{4})")[,2], substr(Year,1,4)))
team_results <- team_results %>% readr::type_convert() %>% mutate(Year = Year + 1)
#Knicks data is messed up for two years for some reason
team_results[874,1] = 2017
team_results[875,1] = 2016
team_results <- team_results %>% filter(Year < 2017 & Year >= 1974)
#converting team names to team ids in the season_stats_dataset (not fun)
unique(team_results$Team)
team_ids <- c("Rockets", "Bucks", "Pistons", "Bulls","Kings", "Suns", "Knicks", "Warriors", "Hawks", "76ers", "Cavaliers", "Lakers",  "Supersonics","Celtics", "Braves", "Bullets", "Trail Blazers", "Total","Jazz", "Bullets", "Kings", "Pacers", "Nets", "Nuggets", "Spurs", "Nets", "Clippers", "Jazz", "Mavericks", "Clippers", "Kings", "Hornets", "Heat", "Magic", "Timberwolves", "Grizzlies", "Raptors", "Wizards", "Grizzlies", "Hornets", "Bobcats", "Hornets", "Thunder", "Nets", "Pelicans", "Hornets")
names(team_ids) <- unique(season_stats$Team)
season_stats <- season_stats %>% mutate(Team = team_ids[Team])
season_stats <- season_stats %>% filter(Team != "Total")
head(season_stats)
head(team_results)
library(tidyverse)
library(dplyr)
library(readxl)
#reading in player stats, filtering our old seasons, we only need player, team, year and VORP
season_stats = read_csv("~/Documents/Sophmore Year Classes/CMSC320/Final Project/Seasons_Stats.csv")
season_stats <- season_stats %>% filter(Year >= 1974 & Year < 2017) %>% select(Year,Player,Tm,VORP) %>% transform(VORP = as.numeric(VORP)) %>% rename(Team = Tm)
#reading in team results, converting years & teams to same as player dataset
team_results = read_xlsx("~/Documents/Sophmore Year Classes/CMSC320/Final Project/Historical NBA Performance.xlsx")
#clean up year data, add 1 to each year to match up
team_results <- team_results %>% rename(win_pct = Winning_Percentage) %>% select(Year, Team, win_pct)
team_results <- team_results %>% mutate(Year = if_else(str_detect(Year,"\\d{1,2}/\\d/\\d{4}"), str_match(Year,"\\d{1,2}/\\d/(\\d{4})")[,2], substr(Year,1,4)))
team_results <- team_results %>% readr::type_convert() %>% mutate(Year = Year + 1)
#Knicks data is messed up for two years for some reason
team_results[874,1] = 2017
team_results[875,1] = 2016
team_results <- team_results %>% filter(Year < 2017 & Year >= 1974)
#converting team names to team ids in the season_stats_dataset (not fun)
unique(team_results$Team)
team_ids <- c("Rockets", "Bucks", "Pistons", "Bulls","Kings", "Suns", "Knicks", "Warriors", "Hawks", "76ers", "Cavaliers", "Lakers",  "Supersonics","Celtics", "Braves", "Bullets", "Trail Blazers", "Total","Jazz", "Bullets", "Kings", "Pacers", "Nets", "Nuggets", "Spurs", "Nets", "Clippers", "Jazz", "Mavericks", "Clippers", "Kings", "Hornets", "Heat", "Magic", "Timberwolves", "Grizzlies", "Raptors", "Wizards", "Grizzlies", "Hornets", "Bobcats", "Hornets", "Thunder", "Nets", "Pelicans", "Hornets")
names(team_ids) <- unique(season_stats$Team)
season_stats <- season_stats %>% mutate(Team = team_ids[Team])
season_stats <- season_stats %>% filter(Team != "Total")
head(season_stats)
head(team_results)
library(tidyverse)
library(dplyr)
library(readxl)
#reading in player stats, filtering our old seasons, we only need player, team, year and VORP
season_stats = read_csv("~/Documents/Sophmore Year Classes/CMSC320/Final Project/Seasons_Stats.csv")
season_stats <- season_stats %>% filter(Year >= 1974 & Year < 2017) %>% select(Year,Player,Tm,VORP) %>% transform(VORP = as.numeric(VORP)) %>% rename(Team = Tm)
#reading in team results, converting years & teams to same as player dataset
team_results = read_xlsx("~/Documents/Sophmore Year Classes/CMSC320/Final Project/Historical NBA Performance.xlsx")
#clean up year data, add 1 to each year to match up
team_results <- team_results %>% rename(win_pct = Winning_Percentage) %>% select(Year, Team, win_pct)
team_results <- team_results %>% mutate(Year = if_else(str_detect(Year,"\\d{1,2}/\\d/\\d{4}"), str_match(Year,"\\d{1,2}/\\d/(\\d{4})")[,2], substr(Year,1,4)))
team_results <- team_results %>% readr::type_convert() %>% mutate(Year = Year + 1)
#Knicks data is messed up for two years for some reason
team_results[874,1] = 2017
team_results[875,1] = 2016
team_results <- team_results %>% filter(Year < 2017 & Year >= 1974)
#converting team names to team ids in the season_stats_dataset (not fun)
team_ids <- c("Rockets", "Bucks", "Pistons", "Bulls","Kings", "Suns", "Knicks", "Warriors", "Hawks", "76ers", "Cavaliers", "Lakers",  "Supersonics","Celtics", "Braves", "Bullets", "Trail Blazers", "Total","Jazz", "Bullets", "Kings", "Pacers", "Nets", "Nuggets", "Spurs", "Nets", "Clippers", "Jazz", "Mavericks", "Clippers", "Kings", "Hornets", "Heat", "Magic", "Timberwolves", "Grizzlies", "Raptors", "Wizards", "Grizzlies", "Hornets", "Bobcats", "Hornets", "Thunder", "Nets", "Pelicans", "Hornets")
names(team_ids) <- unique(season_stats$Team)
season_stats <- season_stats %>% mutate(Team = team_ids[Team])
season_stats <- season_stats %>% filter(Team != "Total")
head(season_stats)
head(team_results)
best_player %>% group_by(Team,Year) %>% summarize(cVORP = cumsum(VORP))
best_player %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP))
best_player %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% order_by(Team)
best_player %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% arrange(Year,Team)
player_vorp_ranks %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% arrange(Year,Team)
player_vorp_ranks %>% arrange(player_ranks)
player_vorp_ranks %>% arrange(player_rank)
player_vorp_ranks %>% arrange(player_rank) %>% group_by(Team,Year)
player_vorp_ranks %>% arrange(player_rank) %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% arrange(Year,Team)
player_vorp_ranks %>% ggplot(aes(x=player_rank, y=cVORP)) +
geom_line()
player_vorp_ranks <- player_vorp_ranks %>% arrange(player_rank) %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% arrange(Year,Team)
player_vorp_ranks %>% ggplot(aes(x=player_rank, y=cVORP)) +
geom_line()
player_vorp_ranks %>% ggplot(aes(x=player_rank, y=cVORP, group = player_rank)) +
geom_point()
player_vorp_ranks %>% ggplot(aes(x=player_rank, y=cVORP, group = player_rank)) +
geom_line()
player_vorp_ranks %>% ggplot(aes(x=player_rank, y=cVORP, group = player_rank)) +
geom_point()
player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP)) %>%
player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP))
player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP))
mean_cvorps <- player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP))
mean_cvorps %>% ggplot(aes(x=player_rank, y=mean_cvorp)) +
geom_line()
mean_cvorps <- player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP)) %>% filter(player_rank <= 15)
mean_cvorps %>% ggplot(aes(x=player_rank, y=mean_cvorp)) +
geom_line()
#players who ranked #1 in vorp for their team that year
best_player <- player_vorp_ranks %>% filter(player_rank == 1) %>% inner_join(team_results, by = c("Team","Year"))
#standardized vorps - how good was your best player relative to other teams' best players that year
best_player_standardized <- best_player %>% group_by(Year) %>% summarize(mean_vorp = mean(VORP), sd_vorp = sd(VORP)) %>% left_join(best_player,by = "Year") %>% mutate(std_vorp = (VORP-mean_vorp)/sd_vorp) %>% select(Year,Player,std_vorp,win_pct)
best_player_stdmodel <- lm(win_pct ~ std_vorp, data = best_player_standardized)
best_player_standardized %>% ggplot(aes(x=std_vorp, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(best_player_stdmodel)$adj.r.squared, 3),
"Intercept =",signif(best_player_stdmodel$coef[[1]],3 ),
"Best Player Coefficient =",signif(best_player_stdmodel$coef[[2]], 3)))
#sum total vorp of top 5 players on each team
top5 <- player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank <= 5) %>% summarize(top_5_vorp = sum(VORP))
#sum total VORP of the rest of the players
bench <- player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank > 5) %>% summarize(bench_vorp = sum(VORP))
#standardize each group relative to league that year
top5sd <- top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std5_vorp = (top_5_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,std5_vorp)
benchsd <- bench %>% group_by(Year) %>% summarize(mean_vorp = mean(bench_vorp), sd_vorp = sd(bench_vorp)) %>% left_join(bench, by = "Year") %>% mutate(stdb_vorp = (bench_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,stdb_vorp)
#join results
topvb <- top5sd %>% inner_join(benchsd, by = c("Team","Year")) %>% inner_join(team_results, by = c("Team","Year"))
top5_model <- lm(win_pct ~ std5_vorp, data = topvb)
summary(top5_model)
bench_model <- lm(win_pct ~ stdb_vorp, data = topvb)
summary(bench_model)
#regression model with standardized top 5 players vs standardized bench players
top5_bench_model <- lm(win_pct ~ std5_vorp+stdb_vorp, data = topvb)
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(top5_bench_model)$adj.r.squared, 2),
"Intercept =",signif(top5_bench_model$coef[[1]],2 ),
"Top 5 Coefficient =",signif(top5_bench_model$coef[[2]], 2),
"Bench Coefficient =",signif(top5_bench_model$coef[[3]], 2)))
summary(top5_model)
sum total vorp of top 5 players on each team
#sum total vorp of top 5 players on each team
top5 <- player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank <= 5) %>% summarize(top_5_vorp = sum(VORP))
#sum total VORP of the rest of the players
bench <- player_vorp_ranks %>% group_by(Team,Year) %>% filter(player_rank > 5) %>% summarize(bench_vorp = sum(VORP))
#standardize each group relative to league that year
top5sd <- top5 %>% group_by(Year) %>% summarize(mean_vorp = mean(top_5_vorp), sd_vorp = sd(top_5_vorp)) %>% left_join(top5, by = "Year") %>% mutate(std5_vorp = (top_5_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,std5_vorp)
benchsd <- bench %>% group_by(Year) %>% summarize(mean_vorp = mean(bench_vorp), sd_vorp = sd(bench_vorp)) %>% left_join(bench, by = "Year") %>% mutate(stdb_vorp = (bench_vorp-mean_vorp)/sd_vorp) %>% select(Year,Team,stdb_vorp)
#join results
topvb <- top5sd %>% inner_join(benchsd, by = c("Team","Year")) %>% inner_join(team_results, by = c("Team","Year"))
top5_model <- lm(win_pct ~ std5_vorp, data = topvb)
bench_model <- lm(win_pct ~ stdb_vorp, data = topvb)
#regression model with standardized top 5 players vs standardized bench players
top5_bench_model <- lm(win_pct ~ std5_vorp+stdb_vorp, data = topvb)
top5_bench_model %>%  broom::augment() %>%
ggplot(aes(x=.fitted, y=win_pct)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = paste("Adj R2 = ",signif(summary(top5_bench_model)$adj.r.squared, 2),
"Intercept =",signif(top5_bench_model$coef[[1]],2 ),
"Top 5 Coefficient =",signif(top5_bench_model$coef[[2]], 2),
"Bench Coefficient =",signif(top5_bench_model$coef[[3]], 2)))
#caclulating the rank of player vorp contribution to their team
player_vorp_ranks <- season_stats %>% group_by(Year,Team) %>% mutate(player_rank = order(order(VORP, decreasing = TRUE)))
#add cummulative sum of player vorp
player_vorp_ranks <- player_vorp_ranks %>% arrange(player_rank) %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% arrange(Year,Team)
#get mean of cummulative vorp by rank
mean_cvorps <- player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP))
#looking at team VORP contribution across player ranks
mean_cvorps %>% ggplot(aes(x=player_rank, y=mean_cvorp)) +
geom_line()
#caclulating the rank of player vorp contribution to their team
player_vorp_ranks <- season_stats %>% group_by(Year,Team) %>% mutate(player_rank = order(order(VORP, decreasing = TRUE)))
#add cummulative sum of player vorp
player_vorp_ranks <- player_vorp_ranks %>% arrange(player_rank) %>% group_by(Team,Year) %>% mutate(cVORP = cumsum(VORP)) %>% arrange(Year,Team)
#get mean of cummulative vorp by rank
mean_cvorps <- player_vorp_ranks %>% ungroup() %>% group_by(player_rank) %>% summarize(mean_cvorp = mean(cVORP)) %>% filter(player_rank <= 15)
#looking at team VORP contribution across player ranks
mean_cvorps %>% ggplot(aes(x=player_rank, y=mean_cvorp)) +
geom_line()
#spread player ranks across columns for wide dataset
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
#renaming columns, computing standardized vorp for each category 1,3,3-15
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10", "r11" = "11","r12" = "12", "r13" = "13", "r14" = "14", "r15" = "15")
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:17))
spread_ranks
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:18))
spread_ranks <- player_vorp_ranks %>% select(-Player) %>% spread(player_rank,VORP, fill = 0) %>% select(c(1:18))
#renaming columns, computing standardized vorp for each category 1,3,3-15
spread_ranks_w <- spread_ranks %>% inner_join(team_results, by = c("Year","Team")) %>% rename("r1" = "1","r2" = "2","r3" = "3","r4" = "4","r5" = "5","r6" = "6","r7" = "7","r8" = "8","r9" = "9","r10" = "10", "r11" = "11","r12" = "12", "r13" = "13", "r14" = "14", "r15" = "15")
spread_ranks_w2 <- spread_ranks_w %>% mutate(vorp12 = r1 + r2, vorp35 = r3+r4+r5,rest_vorp = r6+r7+r8+r9+r1+r11+r12+r13+r14+r15)
spread_ranks_w2 <- spread_ranks_w2 %>% group_by(Year) %>% summarize(mean_12 = mean(vorp12), sd12 = sd(vorp12), mean_35 = mean(vorp35), sd35 = sd(vorp35), mean_rest = mean(rest_vorp), sd_rest = sd(rest_vorp)) %>% inner_join(spread_ranks_w2, by = "Year") %>% mutate(std_12 = (vorp12-mean_12)/sd12,std_35 = (vorp35-mean_35)/sd35, std_rest = (rest_vorp-mean_rest)/sd_rest) %>% select(Year,Team,std_12,std_35,std_rest,win_pct)
correlationMatrix <- cor(spread_ranks_w[,3:18])
correlationMatrix2 <- cor(spread_ranks_w2[,3:6])
#random forest from spread ranks
library(randomForest)
vorp_rf1 <- randomForest(win_pct~r1+r2+r3+r4+r5+r6+r7+r8+r9+r1+r11+r12+r13+r14+r15, importance=TRUE, data=spread_ranks_w)
vorp_rf2 <- randomForest(win_pct~std_12+std_35+std_rest, importance=TRUE, data=spread_ranks_w2)
b25_model <- lm(win_pct ~ std_12+std_35+std_rest, data = spread_ranks_w2)
#determining variable importance
